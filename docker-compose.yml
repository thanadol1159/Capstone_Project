version: "3.9"

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik.yml:/etc/traefik/traefik.yml"
    networks:
      - my_network

  db:
    container_name: db
    image: postgres:15.5
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dbpass
    ports:
      - "5173:5432"
    networks:
      - my_network
    volumes:
      - db:/var/lib/postgresql/data/

  django:
    container_name: django
    build:
      context: backend
      dockerfile: Dockerfile.Dev
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    user: "1000:1000"
    depends_on:
      - db
    networks:
      - my_network
    environment:
      SQL_ENGINE: django.db.backends.postgresql
      SQL_DATABASE: postgres
      SQL_USER: root
      SQL_PASSWORD: dbpass
      SQL_HOST: db
      SQL_PORT: 5432
      DATABASE: postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`django.localhost`)"
      - "traefik.http.routers.django.entrypoints=web"

  next:
    container_name: next
    build:
      context: ./Front-end/venue-rental
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - django
    networks:
      - my_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.next.rule=Host(`cp24nk1.sit.kmutt.ac.th`)"
      - "traefik.http.routers.next.entrypoints=web"
      - "traefik.http.services.next.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.next-headers.headers.customrequestheaders.Connection=upgrade"
      - "traefik.http.middlewares.next-headers.headers.customrequestheaders.Upgrade=$http_upgrade"

  adminer:
    container_name: adminer
    image: adminer
    networks:
      - my_network
    ports:
      - 8900:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.localhost`)"
      - "traefik.http.routers.adminer.entrypoints=web"

networks:
  my_network:
    driver: bridge

volumes:
  db:
    driver: local
