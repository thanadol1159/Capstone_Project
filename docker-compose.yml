services:
  reverse-proxy:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/ssl/
      - ./backend/source/media:/backend/source/media
    depends_on:
      - next
    networks:
      - my_network

  ml:
    container_name: ml
    build: ./ML
    ports:
      - "5000:5000"
    volumes:
      - ./ML:/app
    networks:
      - my_network

  db:
    container_name: db
    image: postgres:15.5
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dbpass
    ports:
      - "5173:5432"
    networks:
      - my_network
    volumes:
      - db:/var/lib/postgresql/data/

  django:
    container_name: django
    build:
      context: backend
      dockerfile: Dockerfile.Dev
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - ./backend/source/media:/backend/source/media
    user: "1000:1000"
    depends_on:
      - db
      - ml
    networks:
      - my_network
    environment:
      SQL_ENGINE: django.db.backends.postgresql
      SQL_DATABASE: postgres
      SQL_USER: root
      SQL_PASSWORD: dbpass
      SQL_HOST: db
      SQL_PORT: 5432
      DATABASE: postgres
      DJANGO_ENV: production
    command: "python manage.py runserver 0.0.0.0:8080"

  next:
    container_name: next
    build:
      context: ./Front-end/venue-rental
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - django
    networks:
      - my_network

  adminer:
    container_name: adminer
    image: adminer
    networks:
      - my_network
    ports:
      - 8900:8080

networks:
  my_network:
    driver: bridge

volumes:
  db:
    driver: local
