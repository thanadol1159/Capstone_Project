services:
  db:
    container_name: db
    image: postgres:15.5
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dbpass
    ports:
      - 5173:5173
    networks:
      - my_network
    volumes:
      - db:/var/lib/postgresql/data/

  adminer:
    container_name: adminer
    image: adminer
    networks:
      - my_network
    ports:
      - 8000:8000

  django:
    container_name: django
    build:
      context: backend
      dockerfile: Dockerfile.Dev
    ports:
      - 8080:8080
    volumes:
      - .:/app
    user: 1000:1000
    depends_on:
      - db
      - minio
    networks:
      - my_network
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=postgres
      - SQL_USER=root
      - SQL_PASSWORD=dbpass
      - SQL_HOST=db
      - SQL_PORT=5432
      - DATABASE=postgres
    command: "python manage.py runserver 0.0.0.0:8000"

  next:
    container_name: next
    build:
      context: Front-end
      dockerfile: Dockerfile
    ports:
      - 80:80
    volumes:
      - ./Front-end/venue-rental/:/app
    depends_on:
      - django
    user: 1000:1000
    networks:
      - my_network
    command: sh -c "npm install && npm run dev"

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
    volumes:
      - minio_data:/data
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  db:
    driver: local
  minio_data:
    driver: local
  data:
